/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int Num = 5;
  /** RegularExpression Id. */
  int PLUS = 6;
  /** RegularExpression Id. */
  int SMICOL = 7;
  /** RegularExpression Id. */
  int MINUS = 8;
  /** RegularExpression Id. */
  int TIMES = 9;
  /** RegularExpression Id. */
  int DIV = 10;
  /** RegularExpression Id. */
  int EON = 11;
  /** RegularExpression Id. */
  int COMMA = 12;
  /** RegularExpression Id. */
  int EEL = 13;
  /** RegularExpression Id. */
  int LPAR = 14;
  /** RegularExpression Id. */
  int RPAR = 15;
  /** RegularExpression Id. */
  int EQ = 16;
  /** RegularExpression Id. */
  int DBLEQ = 17;
  /** RegularExpression Id. */
  int GREATER = 18;
  /** RegularExpression Id. */
  int GREATEREQL = 19;
  /** RegularExpression Id. */
  int LESS = 20;
  /** RegularExpression Id. */
  int LESSEQL = 21;
  /** RegularExpression Id. */
  int IF = 22;
  /** RegularExpression Id. */
  int THEN = 23;
  /** RegularExpression Id. */
  int ELSE = 24;
  /** RegularExpression Id. */
  int WHILE = 25;
  /** RegularExpression Id. */
  int DO = 26;
  /** RegularExpression Id. */
  int NOT = 27;
  /** RegularExpression Id. */
  int AND = 28;
  /** RegularExpression Id. */
  int OR = 29;
  /** RegularExpression Id. */
  int LET = 30;
  /** RegularExpression Id. */
  int IN = 31;
  /** RegularExpression Id. */
  int END = 32;
  /** RegularExpression Id. */
  int FUN = 33;
  /** RegularExpression Id. */
  int NEW = 34;
  /** RegularExpression Id. */
  int DEREF = 35;
  /** RegularExpression Id. */
  int ASSIGN = 36;
  /** RegularExpression Id. */
  int FREE = 37;
  /** RegularExpression Id. */
  int RARW = 38;
  /** RegularExpression Id. */
  int BOOL = 39;
  /** RegularExpression Id. */
  int COLON = 40;
  /** RegularExpression Id. */
  int TYPEINT = 41;
  /** RegularExpression Id. */
  int TYPEBOOL = 42;
  /** RegularExpression Id. */
  int TYPEREF = 43;
  /** RegularExpression Id. */
  int TYPEFUN = 44;
  /** RegularExpression Id. */
  int Id = 45;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "<Num>",
    "\"+\"",
    "\";\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"^\"",
    "\",\"",
    "\";;\"",
    "\"(\"",
    "\")\"",
    "\"=\"",
    "\"==\"",
    "\">\"",
    "\">=\"",
    "\"<\"",
    "\"<=\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"while\"",
    "\"do\"",
    "\"~\"",
    "\"&&\"",
    "\"||\"",
    "\"let\"",
    "\"in\"",
    "\"end\"",
    "\"fun\"",
    "\"new\"",
    "\"!\"",
    "\":=\"",
    "\"free\"",
    "\"->\"",
    "<BOOL>",
    "\":\"",
    "\"int\"",
    "\"bool\"",
    "\"Ref\"",
    "\"Fun\"",
    "<Id>",
  };

}
